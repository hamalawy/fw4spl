/* ***** BEGIN LICENSE BLOCK *****
 * FW4SPL - Copyright (C) IRCAD, 2009-2012.
 * Distributed under the terms of the GNU Lesser General Public License (LGPL) as
 * published by the Free Software Foundation.
 * ****** END LICENSE BLOCK ****** */
#ifndef __FWCOM_SLOTRUN_HPP__
#define __FWCOM_SLOTRUN_HPP__

#include <set>

#include <boost/function.hpp>

#include <fwThread/Worker.hpp>

#include "fwCom/SlotBase.hpp"

namespace fwCom
{

template< typename F >
struct SlotRun;

template< typename ... A >
struct SlotRun< void (A...) > : SlotBase
{

    typedef void SignatureType(A...);
    typedef SlotRun< SignatureType > SelfType;
    typedef SPTR( SelfType ) sptr;
    typedef WPTR( SelfType ) wptr;

    SlotRun() : SlotBase( sizeof...(A) ) {}

    virtual void run(A ... a) const = 0;

    virtual SlotBase::VoidSharedFutureType asyncRun( const ::fwThread::Worker::sptr &worker, A... args ) const;

    virtual SlotBase::VoidSharedFutureType asyncRun(A... args) const;

protected:
    virtual ::boost::function< void() > bindRun( A...args  ) const;

};


} // namespace fwCom

#endif /* __FWCOM_SLOTRUN_HPP__ */



<plugin id="TutoVectorField">

<requirement id="servicesReg" />

<extension implements="::fwServices::registry::AppConfig">
        <id>TutoVectorField</id>
        <type>parameters</type>
        <config>


    <object type="::fwData::Composite">
        <service uid="IHM" impl="::gui::frame::DefaultFrame" type="::fwGui::IFrameSrv" autoConnect="no">
            <gui>
                <frame>
                    <name>TutoVectorField</name>
                </frame>
                <menuBar />
            </gui>
            <registry>
                <menuBar sid="menuBar" start="yes" />
                <view sid="multiView_scene1" start="yes" />
            </registry>
        </service>
        <service uid="menuBar" type="::fwGui::IMenuBarSrv" impl="::gui::aspect::DefaultMenuBarSrv" autoConnect="no" >
            <gui>
                <layout>
                    <menu name="File" />
                </layout>
            </gui>
            <registry>
                <menu sid="menu_File" start="yes" />
            </registry>
        </service>

        <service uid="menu_File" type="::fwGui::IMenuSrv" impl="::gui::aspect::DefaultMenuSrv" autoConnect="no" >
            <gui>
                <layout>
                    <menuItem name="Open file" shortcut="Ctrl+O" />
                    <menuItem name="Save file" shortcut="Ctrl+S" />
                    <separator />
                    <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="action_openFile" start="yes" />
                <menuItem sid="action_saveFile" start="yes" />
                <menuItem sid="action_quit" start="yes" />
            </registry>
        </service>

        <service uid="action_openFile" type="::fwGui::IActionSrv" impl="::gui::action::StarterActionService" autoConnect="no">
            <start uid="readerPathFile" />
        </service>
        <service uid="action_saveFile" type="::fwGui::IActionSrv" impl="::gui::action::StarterActionService" autoConnect="no">
            <start uid="writerPathFile" />
        </service>
        <service uid="action_quit" type="::fwGui::IActionSrv" impl="::gui::action::QuitAction" autoConnect="no" />

        <service uid="multiView_scene1" type="::gui::view::IView" impl="::gui::view::DefaultView" autoConnect="no" >
            <gui>
                <layout type="::fwGui::CardinalLayoutManager" >
                    <view align="center" />
                    <view align="bottom" minWidth="400" minHeight="30" resizable="no" />
                </layout>
            </gui>
            <registry>
                <view sid="genericScene" start="yes" />
                <view sid="multiView_scene1_bottom" start="yes" />
            </registry>
        </service>


        <service uid="multiView_scene1_bottom" type="::gui::view::IView" impl="::gui::view::DefaultView" autoConnect="no">
            <gui>
                <layout type="::fwGui::LineLayoutManager" >
                    <orientation value="horizontal" />
                    <view proportion="0" minWidth="30" />
                    <view proportion="0" minWidth="50" />
                    <view proportion="1" />
                    <view proportion="0" minWidth="30" />
                </layout>
            </gui>
            <registry>
                <view sid="sliceListEditor" start="yes" />
                <view sid="showScanEditor" start="yes" />
                <view sid="sliderIndexEditor" start="yes" />
                <view sid="snapshotScene1Editor" start="yes" />
            </registry>
        </service>

        <service uid="snapshotScene1Editor" type="::gui::editor::IEditor" impl="::uiVisu::SnapshotEditor" autoConnect="no">
            <snap>
                <scene uid="genericScene" />
            </snap>
        </service>

        <!-- CompositeVisu description -->
        <item key="compositeVisu">
            <object uid="compositeVisu" type="::fwData::Composite">


                <service uid="genericScene" impl="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoConnect="yes">
                    <scene>
                        <picker id="picker" vtkclass="fwVtkCellPicker" />

                        <renderer id="default" background="0.5" />
                        <adaptor id="renderAdaptor" class="::visuVTKAdaptor::Render" objectId="self">
                            <config renderer="default" picker="" />
                        </adaptor>

                        <adaptor uid="MPRNegatoScene3D" id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="image">
                            <config renderer="default" picker="picker" mode="3D" slices="3" sliceIndex="axial" />
                        </adaptor>

                        <adaptor uid="vectorFieldAdatpor" id="vectorFieldAdatporId" class="::visuVTKAdaptor::VectorField" objectId="image">
                            <config renderer="default" />
                        </adaptor>

                        <adaptor id="snapshot1" class="::visuVTKAdaptor::Snapshot" objectId="self" >
                            <config renderer="default" />
                        </adaptor>
                    </scene>
                </service>

                <item key="image">

                    <object uid="image" type="::fwData::Image">

                        <service uid="readerPathFile" impl="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoConnect="no"> 
                            <type mode="reader"/>
                        </service>

                        <service uid="writerPathFile" impl="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoConnect="no"> 
                            <type mode="writer"/>
                        </service>

                        <!-- This service convert a simple fwData::Image to medical Image -->
                        <service uid="medicalImageConverter" impl="::ctrlSelection::MedicalImageSrv" type="::fwServices::IController"  autoConnect="no" />

                        <service uid="sliceListEditor" type="::gui::editor::IEditor" impl="::uiImage::SliceListEditor" autoConnect="yes">
                            <negatoAdaptor uid="MPRNegatoScene3D" slices="3" />
                        </service>
                        <service uid="showScanEditor" type="::gui::editor::IEditor" impl="::uiImage::ShowScanEditor" autoConnect="no">
                            <negatoAdaptor uid="MPRNegatoScene3D" />
                        </service>
                        <service uid="sliderIndexEditor" type="::gui::editor::IEditor" impl="::uiImage::SliceIndexPositionEditor" autoConnect="yes" >
                            <sliceIndex>axial</sliceIndex>
                        </service>
                    </object>
                </item>
            </object>
        </item>

        <start uid="IHM" />

    </object>


        </config>
    </extension>

</plugin>

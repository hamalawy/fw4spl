<plugin id="DemoComSofaConfiguration">

    <!--<extension id="DemoComSofaConfig" implements="::fwData::Mesh">-->
    
    <requirement id="servicesReg" /> <!-- new -->

    
    <extension implements="::fwServices::registry::AppConfig">
        <id>DemoComSofaConfigurationID</id>
        <type>parameters</type>
        <config> <!-- /new -->

        <object uid="CompositeVisu" type="::fwData::Composite">
        
        <service uid="RenderingMesh" impl="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoConnect="yes">
                    <scene>
                        <!--<picker id="myPicker" vtkclass="fwVtkCellPicker" />-->

                        <renderer id="default" background="0.0" />
                        <adaptor id="myRenderAdaptor" class="::visuVTKAdaptor::Render" objectId="self">
                            <config renderer="default" picker="" />
                        </adaptor>

                        <adaptor id="MeshAdaptor" class="::visuVTKAdaptor::Mesh" objectId="TrianMesh">
                            <config renderer="default" picker="" />
                        </adaptor>

                    </scene>
                </service>

        <!--  Mesh data creation. -->
        <item key="TrianMesh">
        <object uid="myMesh" type="::fwData::Mesh">

            <!-- Mise en place de la fenetre pricipale  -->
            <service uid="MyIHM" type="::fwGui::IFrameSrv" impl="::gui::frame::DefaultFrame" autoConnect="no">
                <gui>
                    <frame>
                        <name>Altran-Est - Medic@ : PoC 1 Demo integration SOFA-FW4SPL</name>
                        <icon>Bundles/PoC01SofaMonoOrgan_0-1/tuto.ico</icon>
                        <minSize width="800" height="600" />
                    </frame>
                    <menuBar />
                </gui>
                <registry>
                    <menuBar sid="myMenuBar" start="yes" />
                    <view sid="myDefaultView" start="yes" />
                </registry>
            </service>

            <!-- Mise en place de la partie visualisation  -->
            <service uid="myDefaultView" type="::gui::view::IView" impl="::gui::view::DefaultView" autoConnect="no">
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="horizontal" />
                        <view caption="" />
                    </layout>
                </gui>
                <registry>
                    <view sid="RenderingMesh" start="yes" />
                </registry>
            </service>

            <!-- ****************************************** -->

            <!-- Liste des menus -->
            <service uid="myMenuBar" type="::fwGui::IMenuBarSrv" impl="::gui::aspect::DefaultMenuBarSrv" autoConnect="no">
                <gui>
                    <layout>
                        <menu name="Fichier" />
                        <menu name="Sofa" />
                        <menu name="?" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuFile" start="yes" />
                    <menu sid="menuSofa" start="yes" />
                    <menu sid="menuAbout" start="yes" />
                </registry>
            </service>

            <!-- ****************************************** -->

            <!-- Menu Fichier -->
            <service uid="menuFile" type="::fwGui::IMenuSrv" impl="::gui::aspect::DefaultMenuSrv" autoConnect="no">
                <gui>
                    <layout>
                        <menuItem name="Ouvrir"/>
                        <separator />
                        <menuItem name="Quitter" specialAction="QUIT" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionOpen" start="yes" />
                    <menuItem sid="actionQuit" start="yes" />
                </registry>
            </service>

            <!-- Menu Sofa -->
            <service uid="menuSofa" type="::fwGui::IMenuSrv" impl="::gui::aspect::DefaultMenuSrv" autoConnect="no">
                <gui>
                    <layout>
                        <menuItem name="Deformer" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionDeform" start="yes" />
                </registry>
            </service>

            <!-- Menu Apropos -->
            <service uid="menuAbout" type="::fwGui::IMenuSrv" impl="::gui::aspect::DefaultMenuSrv" autoConnect="no">
                <gui>
                    <layout>
                        <menuItem name="A propos" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionAbout" start="yes" />
                </registry>
            </service>

            <!-- ****************************************** -->

            <!-- Action Ouvrir -->
            <service uid="actionOpen" type="::fwGui::IActionSrv" impl="::gui::action::StarterActionService" autoConnect="no">
                <start uid="readerPathMeshFile" />
            </service>

            <!-- Action Quitter -->
            <service uid="actionQuit" type="::fwGui::IActionSrv" impl="::gui::action::QuitAction" autoConnect="no" />

            <!-- Action Deformer qui appelle SofaService -->
            <service uid="actionDeform" type="::fwGui::IActionSrv" impl="::opSofa::SofaTrianSrv" autoConnect="no">
                <mesh uid="myMesh" />
            </service>

            <!-- Action Apropos -->
            <service uid="actionAbout" type="::fwGui::IActionSrv" impl="::gui::action::StarterActionService" autoConnect="no">
            </service>

            <!-- ****************************************** -->

            <!-- Service de rendu -->
            <!--<service impl="::vtkSimpleMesh::RendererService" type="::fwRender::IRender" uid="RenderingMesh" autoConnect="yes">-->
                <!--<masterSlaveRelation>master</masterSlaveRelation>-->
            <!--</service>-->




            <!-- Service de lecture du fichier -->
            <service impl="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" uid="readerPathMeshFile" autoConnect="no">
                <type mode="reader" />
            </service>

            <!-- ****************************************** -->
            
        </object>
        </item>
                

        <!--<start type="::fwGui::IFrameSrv" />-->    
        <start uid="MyIHM" />

        


        </object>
        </config>
    </extension>
</plugin>

<plugin id="TutoConfigurations">
<extension id="tutoComChannelConfig" implements="::fwData::TriangularMesh">

    <!-- In tutoComChannel, the main data object type is ::fwData::TriangularMesh.-->
    <object id="tutoComChannelMesh" type="::fwData::TriangularMesh">

        <service type="::gui::aspect::IAspect" implementation="::gui::aspect::DefaultAspect" autoComChannel="no" >
            <name>tutoComChannel</name>
            <icon>Bundles/Tuto04ComChannel_0-1/tuto.ico</icon>
            <minSize width="720" height="600"/>
            <view uid="myDefaultView" autoStart="yes" />
        </service>

        <service uid="myMenuBar" type="::gui::aspect::IMenuBar" implementation="::gui::aspect::DefaultMenuBar" autoComChannel="no" >
            <menus>
                <menu uid="menu_File" />
            </menus>
        </service>
        
        <!-- The application contains three different views. The different views are characterized by their associated service uid.
                 Furthermore, a minimum window height and a width are given to the last two views.-->
         <service uid="myDefaultView" type="::gui::view::IView" implementation="::gui::view::DefaultView" autoComChannel="no" >
            <views>
                <view uid="myRenderingTuto1" autoStart="yes" />
                <view uid="myRenderingTuto2" minWidth="400" minHeight="100" autoStart="yes" />
                <view uid="myRenderingTuto3" minWidth="400" minHeight="100" autoStart="yes" />
            </views>
        </service>
        
        <service name="File" uid="menu_File" type="::gui::aspect::IMenu" implementation="::gui::aspect::DefaultMenu" autoComChannel="no" >
            <action uid="action_openFile"/>
            <separator/>
            <action uid="action_quit"/>
        </service>


        <service uid="action_openFile" type="::gui::action::IAction" implementation="::gui::action::StarterActionService" name="OpenFile" shortcut="Ctrl+O" autoComChannel="no" >
            <start uid="myReaderPathFile"/>
        </service>

        <service uid="action_quit" specialAction="QUIT"  name="Quit" type="::gui::action::IAction" implementation="::gui::action::QuitAction" shortcut="Ctrl+Q" autoComChannel="no" />



        <service uid="myReaderPathFile" implementation="::uiIO::editor::IOSelectorService" type="::gui::editor::IEditor" autoComChannel="no" >
            <type mode="reader"/>
        </service>

        <!-- Each visualization service tag can be set to the value "master" or "slave". 
        1) If the value is master, the service sends a message containing informations relative to the camera (position, rotation, focus), called CameraMsg, 
        to all the others services associated to the object ::fwData::TriangularMesh. Furthermore, the CameraMsg received from the others services will not be treated.    
        2) Otherwise (slave value), the service does not send CameraMsg. On the other hand, the service will treat the CameraMsg sent by the others services.
        3) The three services listen to the messages concerning meshs, as if they do not treat them. That is the reason why autoComChannel="yes".  
        Visualization service for the first window.-->
        <service implementation="::vtkSimpleMesh::RendererService" type="::fwRender::IRender" uid="myRenderingTuto1" autoComChannel="yes" >
            <masterSlaveRelation>master</masterSlaveRelation>
        </service>

        
        <!-- Visualization service for the second window-->
        <service implementation="::vtkSimpleMesh::RendererService" type="::fwRender::IRender" uid="myRenderingTuto2" autoComChannel="yes" >
            <masterSlaveRelation>slave</masterSlaveRelation>
        </service>


        <!-- Visualization service for the third window-->
        <service implementation="::vtkSimpleMesh::RendererService" type="::fwRender::IRender" uid="myRenderingTuto3" autoComChannel="yes" >
            <masterSlaveRelation>master</masterSlaveRelation>
        </service>

        <start type="::gui::aspect::IAspect" />
        <start type="::gui::aspect::IMenuBar" />
        
        <stop type="::gui::aspect::IMenuBar" />
        <stop type="::gui::aspect::IAspect" />

    </object>

</extension>
</plugin>

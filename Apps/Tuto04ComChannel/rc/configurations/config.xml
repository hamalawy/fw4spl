<plugin id="TutoConfigurations">
<extension implements="::fwServices::registry::AppConfig">
        <id>tutoComChannelConfig</id>
        <type>standard</type>
        <config>
        

    <!-- In tutoComChannel, the main data object type is ::fwData::TriangularMesh.-->
    <object type="::fwData::TriangularMesh">

        <service type="::fwGui::IFrameSrv" implementation="::gui::frame::DefaultFrame" autoComChannel="no" >
            <gui>
                <frame>
                    <name>tutoComChannel</name>
                    <icon>Bundles/Tuto04ComChannel_0-1/tuto.ico</icon>
                    <minSize width="720" height="600"/>
                </frame>
                <menuBar />
            </gui>
            <registry>
                <menuBar sid="myMenuBar" start="yes" />
                <view sid="myDefaultView" start="yes" />
            </registry>
        </service>

        <service uid="myMenuBar" type="::fwGui::IMenuBarSrv" implementation="::gui::aspect::DefaultMenuBarSrv" autoComChannel="no" >
             <gui>
                <layout>
                     <menu name="File" />
                </layout>
            </gui>
            <registry>
                <menu sid="menu_File" start="yes" />
            </registry>
        </service>
        
        <!-- The application contains three different views. The different views are characterized by their associated service uid.
                 Furthermore, a minimum window height and a width are given to the last two views.-->
         <service uid="myDefaultView" type="::gui::view::IView" implementation="::gui::view::DefaultView" autoComChannel="no" >
            <gui>
                <layout type="::fwGui::CardinalLayoutManager" >
                    <view caption="Rendering 1" align="center" />
                    <view caption="Rendering 2" align="right" minWidth="400" minHeight="100" />
                    <view caption="Rendering 3" align="right" minWidth="400" minHeight="100" />
                </layout>
            </gui>
            <registry>
                <view sid="myRenderingTuto1" start="yes" />
                <view sid="myRenderingTuto2" start="yes" />
                <view sid="myRenderingTuto3" start="yes" />
            </registry>
        </service>
        
        <service uid="menu_File" type="::fwGui::IMenuSrv" implementation="::gui::aspect::DefaultMenuSrv" autoComChannel="no" >
            <gui>
                <layout>
                    <menuItem name="Open file" shortcut="Ctrl+O" />
                    <separator />
                    <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="action_openFile" start="yes" />
                <menuItem sid="action_quit" start="yes" />
            </registry>
        </service>


        <service uid="action_openFile" type="::fwGui::IActionSrv" implementation="::gui::action::StarterActionService" autoComChannel="no" >
            <start uid="myReaderPathFile"/>
        </service>

        <service uid="action_quit" type="::fwGui::IActionSrv" implementation="::gui::action::QuitAction" autoComChannel="no" />



        <service uid="myReaderPathFile" implementation="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoComChannel="no" >
            <type mode="reader"/>
        </service>

        <!-- Each visualization service tag can be set to the value "master" or "slave". 
        1) If the value is master, the service sends a message containing informations relative to the camera (position, rotation, focus), called CameraMsg, 
        to all the others services associated to the object ::fwData::TriangularMesh. Furthermore, the CameraMsg received from the others services will not be treated.    
        2) Otherwise (slave value), the service does not send CameraMsg. On the other hand, the service will treat the CameraMsg sent by the others services.
        3) The three services listen to the messages concerning meshs, as if they do not treat them. That is the reason why autoComChannel="yes".  
        Visualization service for the first window.-->
        <service implementation="::vtkSimpleMesh::RendererService" type="::fwRender::IRender" uid="myRenderingTuto1" autoComChannel="yes" >
            <masterSlaveRelation>master</masterSlaveRelation>
        </service>

        
        <!-- Visualization service for the second window-->
        <service implementation="::vtkSimpleMesh::RendererService" type="::fwRender::IRender" uid="myRenderingTuto2" autoComChannel="yes" >
            <masterSlaveRelation>slave</masterSlaveRelation>
        </service>


        <!-- Visualization service for the third window-->
        <service implementation="::vtkSimpleMesh::RendererService" type="::fwRender::IRender" uid="myRenderingTuto3" autoComChannel="yes" >
            <masterSlaveRelation>master</masterSlaveRelation>
        </service>

        <start type="::fwGui::IFrameSrv" />

        <stop type="::fwGui::IFrameSrv" />

    </object>


        </config>
    </extension>
</plugin>

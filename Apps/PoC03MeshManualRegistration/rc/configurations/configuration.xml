<plugin id="PoC03MeshManualRegistration">

<xi:include href="organManagerConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
<xi:include href="manualRegistrationEditorConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
<xi:include href="camViewManagerConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>


<extension id="PoC03MeshManualRegistration" implements="::fwServices::ServiceObjectConfig">

<object type="::fwData::Composite">

	<xi:include href="frameAndViews.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/> 
    
        <service uid="snapshotScene1Editor" type="::gui::editor::IEditor" implementation="::uiVisu::SnapshotEditor" autoComChannel="no">
            <snap>
                <scene uid="genericScene" />
            </snap>
        </service>

        <!-- myPatientDB description -->
        <item key="myPatientDB">
            <object uid="myPatientDB" type="::fwData::PatientDB">
    
                <service uid="myReaderPathFile" implementation="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoComChannel="no">
                    <type mode="reader" />
                    <selection mode="exclude" />
                    <addSelection service="::ioXML::FwXMLPatientDBReaderService" />
                </service>
				
                <service implementation="::ctrlSelection::wrapper::PatientDBWrapperSrv" type="::ctrlSelection::IWrapperSrv" uid="newOBject2newPatientDB" autoComChannel="yes" />
                
                <service uid="myUpdaterComCannelAcq" implementation="::fwServices::ComChannelService" type="::fwServices::ICommunication" autoComChannel="no">
                    <target>myUpdaterAcq</target>
                </service>
    
                <service uid="myUpdaterComCannelImg" implementation="::fwServices::ComChannelService" type="::fwServices::ICommunication" autoComChannel="no">
                    <target>myUpdaterImg</target>
                </service>
    
            </object>
        </item>

        <!-- CompositeVisu description -->
        <item key="myCompositeVisu">
            <object uid="myCompositeVisu" type="::fwData::Composite">
                <!-- MyMeshDB description -->
                <item key="MyMeshDB">
                    <object uid="MyMeshDB" type="::fwData::Vector">


                    </object>
                </item>
                <service uid="myUpdaterAcq" implementation="::ctrlSelection::updater::AcqFromPDBUpdaterSrv" type="::ctrlSelection::IUpdaterSrv" autoComChannel="no">
                    <update compositeKey="myAcquisition" onEvent="NEW_LOADED_PATIENT" fromUID="myPatientDB" actionType="ADD_OR_SWAP" />
                    <update compositeKey="myAcquisition" onEvent="CLEAR_PATIENT" fromUID="myPatientDB" actionType="REMOVE" />
                </service>
    
                <service uid="myUpdaterImg" implementation="::ctrlSelection::updater::ImageFromPDBUpdaterSrv" type="::ctrlSelection::IUpdaterSrv" autoComChannel="no">
                    <update compositeKey="myImage" onEvent="NEW_LOADED_PATIENT" fromUID="myPatientDB" actionType="ADD_OR_SWAP" />
                    <update compositeKey="myImage" onEvent="NEW_PATIENT" fromUID="myPatientDB" actionType="ADD_OR_SWAP" />
                    <update compositeKey="myImage" onEvent="CLEAR_PATIENT" fromUID="myPatientDB" actionType="REMOVE" />
                </service>
    
                <service uid="myManager" implementation="::ctrlSelection::manager::SwapperSrv" type="::ctrlSelection::IManagerSrv" autoComChannel="yes" priority="0.6"  >
                    <mode type="stop" />
                    <config>
                        <object id="myImage" type="::fwData::Image">
                            <!-- This service convert a simple fwData::Image to medical Image -->
                            <service uid="medicalImageConverter" implementation="::ctrlSelection::MedicalImageSrv" type="::fwServices::IController"  autoComChannel="no" />
                            <service uid="sliceListEditor" type="::gui::editor::IEditor" implementation="::uiImage::SliceListEditor" autoComChannel="yes">
                                <negatoAdaptor uid="MPRNegatoScene3D" slices="3" />
                            </service>
                            <service uid="showScanEditor" type="::gui::editor::IEditor" implementation="::uiImage::ShowScanEditor" autoComChannel="no">
                                <negatoAdaptor uid="MPRNegatoScene3D" />
                            </service>
                            <service uid="sliderIndexEditor" type="::gui::editor::IEditor" implementation="::uiImage::SliceIndexPositionEditor" autoComChannel="yes" sliceIndex="axial" />
                        </object>
                    </config>
                </service>
    
                <service uid="genericScene" implementation="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoComChannel="yes">
                    <scene>
                        <picker id="myPicker" vtkclass="fwVtkCellPicker" />
    
                        <renderer id="default" background="0.0" />
                        <adaptor id="myRenderAdaptor" class="::visuVTKAdaptor::Render" objectId="self">
                            <config renderer="default" picker="" />
                        </adaptor>
    
                        <adaptor id="myAcquisitionAdaptor" class="::visuVTKAdaptor::Acquisition" objectId="myAcquisition">
                            <config renderer="default" picker="" />
                        </adaptor>
    
                        <adaptor uid="MPRNegatoScene3D" id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="myImage">
                            <config renderer="default" picker="myPicker" mode="3D" slices="3" sliceIndex="axial" />
                        </adaptor>
                        <adaptor id="snapshot1" class="::visuVTKAdaptor::Snapshot" objectId="self" >
                            <config renderer="default" />
                        </adaptor>
                    </scene>
                </service>
				
				<service uid="genericScene2" implementation="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoComChannel="yes">
                    <scene>
                        <picker id="myPicker" vtkclass="fwVtkCellPicker" />
    
						<vtkObject id="camPosMatrix" class="vtkTransform" />
						<vtkObject id="camTranslation" class="vtkTransform" />
	
	
	                    <vtkObject id="matcompose" class="vtkTransform" >
							<vtkTransform>
							
								<concatenate>camPosMatrix</concatenate>
								<concatenate>camTranslation</concatenate>
							</vtkTransform>
						</vtkObject>
					
					
					
                        <renderer id="default" background="0.0" />
						
                        <adaptor id="myRenderAdaptor" class="::visuVTKAdaptor::Render" objectId="self">
                            <config renderer="default" picker="" />
                        </adaptor>
    
                        <adaptor id="myAcquisitionAdaptor" class="::visuVTKAdaptor::Acquisition" objectId="myAcquisition">
                            <config renderer="default" picker="" />
                        </adaptor>
    
                        <adaptor uid="MPRNegatoScene3D2" id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="myImage">
                            <config renderer="default" picker="myPicker" mode="3D" slices="3" sliceIndex="axial" />
                        </adaptor>
                        <adaptor id="snapshot1" class="::visuVTKAdaptor::Snapshot" objectId="self" >
                            <config renderer="default" />
                        </adaptor>
						
						<adaptor id="myCamPosMatrixAdaptor" class="::visuVTKAdaptor::Transform" objectId="myCamPosMatrix">
							<config renderer="default" picker="" transform="camPosMatrix" />
						</adaptor>
												
						<adaptor id="myCamTranslation" class="::visuVTKAdaptor::Transform" objectId="matrixB">
							<config renderer="default" picker="" transform="camTranslation" />
						</adaptor>
						
						<adaptor id="myCamMeshAdaptor" class="::visuVTKAdaptor::TriangularMesh" objectId="myCamMesh">
							<config renderer="default" picker=""  transform="matcompose"  />
						</adaptor>
					
						<adaptor id="myCamAxes" class="::visuVTKAdaptor::Axes" objectId="self">
							<config renderer="default" transform="camPosMatrix" length="5" label="no" />
						</adaptor>
						
						<adaptor id="myWolrdAxes" class="::visuVTKAdaptor::Axes" objectId="self">
							<config renderer="default" length="5" label="no" />
						</adaptor>
						
                    </scene>
                </service>
			
	        <item key="myCamPosMatrix">
                <object uid="myCamPosMatrix" type="::fwData::TransformationMatrix3D">
                   <service uid="matrixEditor2" implementation="::uiVisu::TransformationMatrixEditor" type="::gui::editor::IEditor" autoComChannel="yes" /> 
                </object>
            </item>

			            
            <item key="matrixB">
                <object uid="matrixB" type="::fwData::TransformationMatrix3D">
                    <matrix>
                        1 0 0 -4
                        0 1 0 0
                        0 0 1 0
                        0 0 0 1 
                    </matrix>
                </object>
            </item>
			
            <item key="myCamMesh">
                <object uid="myCamMesh" type="::fwData::TriangularMesh">
				
				<item key="TransformMatrix">
					<object uid="toto" type="::fwData::TransformationMatrix3D">
						<service uid="matrixEditor" implementation="::uiVisu::TransformationMatrixEditor" type="::gui::editor::IEditor" autoComChannel="yes" />
					</object>
				</item>
			
                    <service uid="myCamReaderFile" implementation="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoComChannel="no" />
                </object>
            </item>
              
              
			      </object>
        </item>  

        <start uid="MyIHM" />
        <start uid="myUpdaterAcq" />
        <start uid="myUpdaterImg" />
        <start uid="myManager" />
        <start uid="myUpdaterComCannelAcq" />
        <start uid="myUpdaterComCannelImg" />
        <start uid="newOBject2newPatientDB"/>

        <stop uid="newOBject2newPatientDB"/>
        <stop uid="myUpdaterComCannelImg" />
        <stop uid="myUpdaterComCannelAcq" />
        <stop uid="myManager" />
        <stop uid="myUpdaterImg" />
        <stop uid="myUpdaterAcq" />
        <stop uid="MyIHM" />

</object>
</extension>

</plugin>

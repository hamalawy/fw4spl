<plugin id="PoC03MeshManualRegistration">

    <requirement id="servicesReg" />

    <xi:include href="configurations/organManagerConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/manualRegistrationEditorConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/camViewManagerConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="configurations/worldViewConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

    <extension implements="::fwServices::registry::AppConfig">
        <id>PoC03MeshManualRegistration</id>
        <type>parameters</type>
        <config>


            <object type="::fwData::Composite">

                <xi:include href="configurations/frameAndViews.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

                <service uid="snapshotScene1Editor" type="::gui::editor::IEditor" impl="::uiVisu::SnapshotEditor" autoConnect="no">
                    <snap>
                        <scene uid="genericScene" />
                    </snap>
                </service>

                <!-- patientDB description -->
                <item key="patientDB">
                    <object uid="patientDB" type="::fwData::PatientDB">

                        <service uid="readerPathFile" impl="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoConnect="no">
                            <type mode="reader" />
                            <selection mode="exclude" />
                            <addSelection service="::ioXML::FwXMLPatientDBReaderService" />
                        </service>
                        
                        <service impl="::ctrlSelection::wrapper::PatientDBWrapperSrv" type="::ctrlSelection::IWrapperSrv" uid="newOBject2newPatientDB" autoConnect="yes" />
                                                
                    </object>
                </item>

                <!-- CompositeVisu description -->
                <item key="compositeVisu">
                    <object uid="compositeVisu" type="::fwData::Composite">

                        <service uid="updaterAcq" impl="::ctrlSelection::updater::AcqFromPDBUpdaterSrv" type="::ctrlSelection::IUpdaterSrv" autoConnect="no">
                            <update compositeKey="acquisition" onEvent="NEW_LOADED_PATIENT" fromUID="patientDB" actionType="ADD_OR_SWAP" />
                            <update compositeKey="acquisition" onEvent="CLEAR_PATIENT" fromUID="patientDB" actionType="REMOVE" />
                        </service>
                        
                        <service uid="updaterImg" impl="::ctrlSelection::updater::ImageFromPDBUpdaterSrv" type="::ctrlSelection::IUpdaterSrv" autoConnect="no">
                            <update compositeKey="image" onEvent="NEW_LOADED_PATIENT" fromUID="patientDB" actionType="ADD_OR_SWAP" />
                            <update compositeKey="image" onEvent="NEW_PATIENT" fromUID="patientDB" actionType="ADD_OR_SWAP" />
                            <update compositeKey="image" onEvent="CLEAR_PATIENT" fromUID="patientDB" actionType="REMOVE" />
                        </service>

                        <service uid="manager" impl="::ctrlSelection::manager::SwapperSrv" type="::ctrlSelection::IManagerSrv" autoConnect="yes">
                            <mode type="stop" />
                            <config>
                                <object id="image" type="::fwData::Image">
                                    <!-- This service convert a simple fwData::Image to medical Image -->
                                    <service uid="medicalImageConverter" impl="::ctrlSelection::MedicalImageSrv" type="::fwServices::IController" autoConnect="no" />
                                    <service uid="sliceListEditor" type="::gui::editor::IEditor" impl="::uiImage::SliceListEditor" autoConnect="yes">
                                        <negatoAdaptor uid="MPRNegatoScene3D" slices="3" />
                                    </service>
                                    <service uid="showScanEditor" type="::gui::editor::IEditor" impl="::uiImage::ShowScanEditor" autoConnect="no">
                                        <negatoAdaptor uid="MPRNegatoScene3D" />
                                    </service>
                                    <service uid="sliderIndexEditor" type="::gui::editor::IEditor" impl="::uiImage::SliceIndexPositionEditor" autoConnect="yes">
                                        <sliceIndex>axial</sliceIndex>
                                    </service>
                                </object>
                            </config>
                        </service>

                        <service uid="genericScene" impl="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoConnect="yes">
                            <scene>
                                <vtkObject id="cam2PosMatrixTransform" class="vtkTransform" />

                                <picker id="picker" vtkclass="fwVtkCellPicker" />
                                <renderer id="default" background="0.0" />
                                <adaptor id="renderAdaptor" class="::visuVTKAdaptor::Render" objectId="self">
                                    <config renderer="default" picker="" />
                                </adaptor>
                                <adaptor id="acquisitionAdaptor" class="::visuVTKAdaptor::Acquisition" objectId="acquisition">
                                    <config renderer="default" picker="" autoresetcamera="no" />
                                </adaptor>
                                <adaptor uid="MPRNegatoScene3D" id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="image">
                                    <config renderer="default" picker="picker" slices="3" sliceIndex="axial" />
                                </adaptor>
                                <adaptor id="snapshot1" class="::visuVTKAdaptor::Snapshot" objectId="self">
                                    <config renderer="default" />
                                </adaptor>

                                <adaptor id="CamPosMatrix" class="::visuVTKAdaptor::Camera2" objectId="view1">
                                    <config renderer="default" picker="" />
                                </adaptor>

                                <adaptor id="CamPos2MatrixTransformAdaptor" class="::visuVTKAdaptor::Transform" objectId="view2">
                                    <config renderer="default" picker="" transform="cam2PosMatrixTransform" />
                                </adaptor>
                                <adaptor id="Cam2MeshAdaptor" class="::visuVTKAdaptor::Mesh" objectId="cam2Mesh">
                                    <config renderer="default" picker="picker" transform="cam2PosMatrixTransform" autoresetcamera="no" />
                                </adaptor>


                                <adaptor id="MeshCompositeAdaptor" class="::visuVTKAdaptor::MeshesBoxWidget" objectId="meshDB">
                                    <config renderer="default" picker="picker" />
                                </adaptor>
                            </scene>
                        </service>
                        
                        <service uid="genericScene2" impl="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoConnect="yes">
                            <scene>
                                <vtkObject id="cam1PosMatrixTransform" class="vtkTransform" />

                                <picker id="picker" vtkclass="fwVtkCellPicker" />

                                <renderer id="default" background="0.0" />

                                <adaptor id="renderAdaptor" class="::visuVTKAdaptor::Render" objectId="self">
                                    <config renderer="default" picker="" />
                                </adaptor>

                                <adaptor id="acquisitionAdaptor" class="::visuVTKAdaptor::Acquisition" objectId="acquisition">
                                    <config renderer="default" picker="" autoresetcamera="no" />
                                </adaptor>

                                <adaptor id="snapshot1" class="::visuVTKAdaptor::Snapshot" objectId="self">
                                    <config renderer="default" />
                                </adaptor>

                                <adaptor id="CamPosMatrix" class="::visuVTKAdaptor::Camera2" objectId="view2">
                                    <config renderer="default" picker="" />
                                </adaptor>

                                <adaptor id="CamPos1MatrixTransformAdaptor" class="::visuVTKAdaptor::Transform" objectId="view1">
                                    <config renderer="default" picker="" transform="cam1PosMatrixTransform" />
                                </adaptor>
                                <adaptor id="Cam1MeshAdaptor" class="::visuVTKAdaptor::Mesh" objectId="cam1Mesh">
                                    <config renderer="default" picker="picker" transform="cam1PosMatrixTransform" autoresetcamera="no" />
                                </adaptor>

                                <adaptor id="MeshCompositeAdaptor" class="::visuVTKAdaptor::MeshesBoxWidget" objectId="meshDB">
                                    <config renderer="default" picker="picker" />
                                </adaptor>
                            </scene>
                        </service>

                        <!-- meshDB description -->
                        <item key="meshDB">
                            <object uid="meshDB" type="::fwData::Composite">
                            </object>
                        </item>
                        
                        <item key="view1">
                            <object uid="view1" type="::fwData::TransformationMatrix3D">
                            </object>
                        </item>

                        <item key="view2">
                            <object uid="view2" type="::fwData::TransformationMatrix3D">
                            </object>
                        </item>

                        <item key="cam2Mesh">
                            <object uid="cam2Mesh" type="::fwData::Mesh">

                                <service uid="camReaderFile" impl="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoConnect="no" />
                                <service uid="cam2ReaderFile" impl="::ioData::MeshReaderService" type="::io::IReader" autoConnect="no">
                                    <file>Bundles/PoC03MeshManualRegistration_0-1/cam.trian</file>
                                </service>
                            </object>
                        </item>

                        <item key="cam1Mesh">
                            <object uid="cam1Mesh" type="::fwData::Mesh">
                                <service uid="cam1ReaderFile" impl="::ioData::MeshReaderService" type="::io::IReader" autoConnect="no">
                                    <file>Bundles/PoC03MeshManualRegistration_0-1/cam.trian</file>
                                </service>
                            </object>
                        </item>
                        
                        <proxy channel="updaters">
                            <signal>patientDB/objectModified</signal>
                            <slot>updaterAcq/receive</slot>
                            <slot>updaterImg/receive</slot>
                        </proxy>
                        
                    </object>
                </item>

                <start uid="IHM" />
                <start uid="updaterAcq" />
                <start uid="updaterImg" />
                <start uid="manager" />
                <start uid="newOBject2newPatientDB" />
                <start uid="cam1ReaderFile" />
                <start uid="cam2ReaderFile" />

                <update uid="cam1ReaderFile" />
                <update uid="cam2ReaderFile" />

            </object>

        </config>
    </extension>

</plugin>

<plugin id="PoC03MeshManualRegistration">

    <requirement id="servicesReg" />

    <xi:include href="organManagerConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="manualRegistrationEditorConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="camViewManagerConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />
    <xi:include href="worldViewConfig.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

    <extension implements="::fwServices::registry::AppConfig">
        <id>PoC03MeshManualRegistration</id>
        <type>standard</type>
        <config>


            <object type="::fwData::Composite">

                <xi:include href="frameAndViews.xml" xmlns:xi="http://www.w3.org/2003/XInclude" />

                <service uid="snapshotScene1Editor" type="::gui::editor::IEditor" implementation="::uiVisu::SnapshotEditor" autoComChannel="no">
                    <snap>
                        <scene uid="genericScene" />
                    </snap>
                </service>

                <!-- myPatientDB description -->
                <item key="myPatientDB">
                    <object uid="myPatientDB" type="::fwData::PatientDB">

                        <service uid="myReaderPathFile" implementation="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoComChannel="no">
                            <type mode="reader" />
                            <selection mode="exclude" />
                            <addSelection service="::ioXML::FwXMLPatientDBReaderService" />
                        </service>
                        
                        <service implementation="::ctrlSelection::wrapper::PatientDBWrapperSrv" type="::ctrlSelection::IWrapperSrv" uid="newOBject2newPatientDB" autoComChannel="yes" />
                        
                        <service uid="myUpdaterComCannelAcq" implementation="::fwServices::ComChannelService" type="::fwServices::ICommunication" autoComChannel="no">
                            <target>myUpdaterAcq</target>
                        </service>
                        
                        <service uid="myUpdaterComCannelImg" implementation="::fwServices::ComChannelService" type="::fwServices::ICommunication" autoComChannel="no">
                            <target>myUpdaterImg</target>
                        </service>
                        
                    </object>
                </item>

                <!-- CompositeVisu description -->
                <item key="myCompositeVisu">
                    <object uid="myCompositeVisu" type="::fwData::Composite">

                        <service uid="myUpdaterAcq" implementation="::ctrlSelection::updater::AcqFromPDBUpdaterSrv" type="::ctrlSelection::IUpdaterSrv" autoComChannel="no">
                            <update compositeKey="myAcquisition" onEvent="NEW_LOADED_PATIENT" fromUID="myPatientDB" actionType="ADD_OR_SWAP" />
                            <update compositeKey="myAcquisition" onEvent="CLEAR_PATIENT" fromUID="myPatientDB" actionType="REMOVE" />
                        </service>
                        
                        <service uid="myUpdaterImg" implementation="::ctrlSelection::updater::ImageFromPDBUpdaterSrv" type="::ctrlSelection::IUpdaterSrv" autoComChannel="no">
                            <update compositeKey="myImage" onEvent="NEW_LOADED_PATIENT" fromUID="myPatientDB" actionType="ADD_OR_SWAP" />
                            <update compositeKey="myImage" onEvent="NEW_PATIENT" fromUID="myPatientDB" actionType="ADD_OR_SWAP" />
                            <update compositeKey="myImage" onEvent="CLEAR_PATIENT" fromUID="myPatientDB" actionType="REMOVE" />
                        </service>

                        <service uid="myManager" implementation="::ctrlSelection::manager::SwapperSrv" type="::ctrlSelection::IManagerSrv" autoComChannel="yes" priority="0.6">
                            <mode type="stop" />
                            <config>
                                <object id="myImage" type="::fwData::Image">
                                    <!-- This service convert a simple fwData::Image to medical Image -->
                                    <service uid="medicalImageConverter" implementation="::ctrlSelection::MedicalImageSrv" type="::fwServices::IController" autoComChannel="no" />
                                    <service uid="sliceListEditor" type="::gui::editor::IEditor" implementation="::uiImage::SliceListEditor" autoComChannel="yes">
                                        <negatoAdaptor uid="MPRNegatoScene3D" slices="3" />
                                    </service>
                                    <service uid="showScanEditor" type="::gui::editor::IEditor" implementation="::uiImage::ShowScanEditor" autoComChannel="no">
                                        <negatoAdaptor uid="MPRNegatoScene3D" />
                                    </service>
                                    <service uid="sliderIndexEditor" type="::gui::editor::IEditor" implementation="::uiImage::SliceIndexPositionEditor" autoComChannel="yes">
                                        <sliceIndex>axial</sliceIndex>
                                    </service>
                                </object>
                            </config>
                        </service>

                        <service uid="genericScene" implementation="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoComChannel="yes">
                            <scene>
                                <vtkObject id="myCam2PosMatrixTransform" class="vtkTransform" />

                                <picker id="myPicker" vtkclass="fwVtkCellPicker" />
                                <renderer id="default" background="0.0" />
                                <adaptor id="myRenderAdaptor" class="::visuVTKAdaptor::Render" objectId="self">
                                    <config renderer="default" picker="" />
                                </adaptor>
                                <adaptor id="myAcquisitionAdaptor" class="::visuVTKAdaptor::Acquisition" objectId="myAcquisition">
                                    <config renderer="default" picker="" autoresetcamera="no" />
                                </adaptor>
                                <adaptor uid="MPRNegatoScene3D" id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="myImage">
                                    <config renderer="default" picker="myPicker" slices="3" sliceIndex="axial" />
                                </adaptor>
                                <adaptor id="snapshot1" class="::visuVTKAdaptor::Snapshot" objectId="self">
                                    <config renderer="default" />
                                </adaptor>

                                <adaptor id="CamPosMatrix" class="::visuVTKAdaptor::Camera2" objectId="view1">
                                    <config renderer="default" picker="" />
                                </adaptor>

                                <adaptor id="CamPos2MatrixTransformAdaptor" class="::visuVTKAdaptor::Transform" objectId="view2">
                                    <config renderer="default" picker="" transform="myCam2PosMatrixTransform" />
                                </adaptor>
                                <adaptor id="Cam2MeshAdaptor" class="::visuVTKAdaptor::TriangularMesh" objectId="myCam2Mesh">
                                    <config renderer="default" picker="myPicker" transform="myCam2PosMatrixTransform" autoresetcamera="no" />
                                </adaptor>


                                <adaptor id="MeshCompositeAdaptor" class="::visuVTKAdaptor::MeshesBoxWidget" objectId="MyMeshDB">
                                    <config renderer="default" picker="myPicker" />
                                </adaptor>
                            </scene>
                        </service>
                        
                        <service uid="genericScene2" implementation="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoComChannel="yes">
                            <scene>
                                <vtkObject id="myCam1PosMatrixTransform" class="vtkTransform" />

                                <picker id="myPicker" vtkclass="fwVtkCellPicker" />

                                <renderer id="default" background="0.0" />

                                <adaptor id="myRenderAdaptor" class="::visuVTKAdaptor::Render" objectId="self">
                                    <config renderer="default" picker="" />
                                </adaptor>

                                <adaptor id="myAcquisitionAdaptor" class="::visuVTKAdaptor::Acquisition" objectId="myAcquisition">
                                    <config renderer="default" picker="" autoresetcamera="no" />
                                </adaptor>

                                <adaptor id="snapshot1" class="::visuVTKAdaptor::Snapshot" objectId="self">
                                    <config renderer="default" />
                                </adaptor>

                                <adaptor id="CamPosMatrix" class="::visuVTKAdaptor::Camera2" objectId="view2">
                                    <config renderer="default" picker="" />
                                </adaptor>

                                <adaptor id="CamPos1MatrixTransformAdaptor" class="::visuVTKAdaptor::Transform" objectId="view1">
                                    <config renderer="default" picker="" transform="myCam1PosMatrixTransform" />
                                </adaptor>
                                <adaptor id="Cam1MeshAdaptor" class="::visuVTKAdaptor::TriangularMesh" objectId="myCam1Mesh">
                                    <config renderer="default" picker="myPicker" transform="myCam1PosMatrixTransform" autoresetcamera="no" />
                                </adaptor>

                                <adaptor id="MeshCompositeAdaptor" class="::visuVTKAdaptor::MeshesBoxWidget" objectId="MyMeshDB">
                                    <config renderer="default" picker="myPicker" />
                                </adaptor>
                            </scene>
                        </service>

                        <!-- MyMeshDB description -->
                        <item key="MyMeshDB">
                            <object uid="MyMeshDB" type="::fwData::Composite">
                            </object>
                        </item>
                        
                        <item key="view1">
                            <object uid="view1" type="::fwData::TransformationMatrix3D">
                            </object>
                        </item>

                        <item key="view2">
                            <object uid="view2" type="::fwData::TransformationMatrix3D">
                            </object>
                        </item>

                        <item key="myCam2Mesh">
                            <object uid="myCam2Mesh" type="::fwData::TriangularMesh">

                                <service uid="myCamReaderFile" implementation="::uiIO::editor::IOSelectorService" type="::gui::editor::IDialogEditor" autoComChannel="no" />
                                <service uid="myCam2ReaderFile" implementation="::ioData::TriangularMeshReaderService" type="::io::IReader" autoComChannel="no">
                                    <filename>Bundles/PoC03MeshManualRegistration_0-1/cam.trian</filename>
                                </service>
                            </object>
                        </item>

                        <item key="myCam1Mesh">
                            <object uid="myCam1Mesh" type="::fwData::TriangularMesh">
                                <service uid="myCam1ReaderFile" implementation="::ioData::TriangularMeshReaderService" type="::io::IReader" autoComChannel="no">
                                    <filename>Bundles/PoC03MeshManualRegistration_0-1/cam.trian</filename>
                                </service>
                            </object>
                        </item>
                        
                    </object>
                </item>

                <start uid="MyIHM" />
                <start uid="myUpdaterAcq" />
                <start uid="myUpdaterImg" />
                <start uid="myManager" />
                <start uid="myUpdaterComCannelAcq" />
                <start uid="myUpdaterComCannelImg" />
                <start uid="newOBject2newPatientDB" />
                <start uid="myCam1ReaderFile" />
                <start uid="myCam2ReaderFile" />

                <update uid="myCam1ReaderFile" />
                <update uid="myCam2ReaderFile" />

            </object>

        </config>
    </extension>

</plugin>
